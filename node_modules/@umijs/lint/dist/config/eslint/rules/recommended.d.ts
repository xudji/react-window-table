/**
 * recommended enabled/disabled rules for umi project
 * @note  base on recommended rule set from loaded eslint plugins
 */
declare const _default: {
    'array-callback-return': number;
    eqeqeq: number;
    'for-direction': number;
    'guard-for-in': number;
    'no-async-promise-executor': number;
    'no-case-declarations': number;
    'no-debugger': number;
    'no-delete-var': number;
    'no-dupe-else-if': number;
    'no-duplicate-case': number;
    'no-eval': number;
    'no-ex-assign': number;
    'no-global-assign': number;
    'no-invalid-regexp': number;
    'no-native-reassign': number;
    'no-param-reassign': number;
    'no-promise-executor-return': number;
    'no-self-assign': number;
    'no-self-compare': number;
    'no-shadow-restricted-names': number;
    'no-sparse-arrays': number;
    'no-unsafe-finally': number;
    'no-unused-labels': number;
    'no-useless-catch': number;
    'no-useless-escape': number;
    'no-var': number;
    'no-with': number;
    'require-yield': number;
    'use-isnan': number;
    'react/button-has-type': number;
    'react/jsx-key': number;
    'react/jsx-no-comment-textnodes': number;
    'react/jsx-no-duplicate-props': number;
    'react/jsx-no-target-blank': number;
    'react/jsx-no-undef': number;
    'react/jsx-uses-react': number;
    'react/jsx-uses-vars': number;
    'react/no-children-prop': number;
    'react/no-danger-with-children': number;
    'react/no-deprecated': number;
    'react/no-direct-mutation-state': number;
    'react/no-find-dom-node': number;
    'react/no-is-mounted': number;
    'react/no-string-refs': number;
    'react/no-render-return-value': number;
    'react/no-unescaped-entities': number;
    'react/no-unknown-property': number;
    'react/require-render-return': number;
    'react-hooks/rules-of-hooks': number;
};
export default _default;
/**
 * config-plugin-jest rules
 */
export declare const jest: {
    'jest/no-conditional-expect': number;
    'jest/no-deprecated-functions': number;
    'jest/no-export': number;
    'jest/no-focused-tests': number;
    'jest/no-identical-title': number;
    'jest/no-interpolation-in-snapshots': number;
    'jest/no-jasmine-globals': number;
    'jest/no-mocks-import': number;
    'jest/no-standalone-expect': number;
    'jest/valid-describe-callback': number;
    'jest/valid-expect-in-promise': number;
    'jest/valid-expect': number;
    'jest/valid-title': number;
};
/**
 * recommended enabled/disabled rules for typescript umi project
 * @note  base on recommended rule set from loaded eslint plugins
 */
export declare const typescript: {
    '@typescript-eslint/ban-types': number;
    '@typescript-eslint/no-confusing-non-null-assertion': number;
    '@typescript-eslint/no-dupe-class-members': number;
    '@typescript-eslint/no-empty-interface': number;
    '@typescript-eslint/no-invalid-this': number;
    '@typescript-eslint/no-loop-func': number;
    '@typescript-eslint/no-misused-new': number;
    '@typescript-eslint/no-namespace': number;
    '@typescript-eslint/no-non-null-asserted-optional-chain': number;
    '@typescript-eslint/no-redeclare': number;
    '@typescript-eslint/no-this-alias': number;
    '@typescript-eslint/no-unused-expressions': number;
    '@typescript-eslint/no-unused-vars': number;
    '@typescript-eslint/no-use-before-define': number;
    '@typescript-eslint/no-useless-constructor': number;
    '@typescript-eslint/triple-slash-reference': number;
};
