import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["element"];
import React from 'react';
import { matchRoutes, useLocation } from 'react-router-dom';
import { useRouteData } from "./routeContext";
export var AppContext = /*#__PURE__*/React.createContext({});
export function useAppData() {
  return React.useContext(AppContext);
}
export function useSelectedRoutes() {
  var location = useLocation();

  var _useAppData = useAppData(),
      clientRoutes = _useAppData.clientRoutes; // use `useLocation` get location without `basename`, not need `basename` param


  var routes = matchRoutes(clientRoutes, location.pathname);
  return routes || [];
}
export function useRouteProps() {
  var _currentRoute$;

  var currentRoute = useSelectedRoutes().slice(-1);

  var _ref = ((_currentRoute$ = currentRoute[0]) === null || _currentRoute$ === void 0 ? void 0 : _currentRoute$.route) || {},
      _ = _ref.element,
      props = _objectWithoutProperties(_ref, _excluded);

  return props;
}
export function useServerLoaderData() {
  var route = useRouteData();
  var appData = useAppData();
  return {
    data: appData.serverLoaderData[route.route.id]
  };
}
export function useClientLoaderData() {
  var route = useRouteData();
  var appData = useAppData();
  return {
    data: appData.clientLoaderData[route.route.id]
  };
}