{"value":{"content":"<><Container type=\"warning\"><ol><li>{$$contentTexts[0].value}<a href=\"https://juejin.cn/post/7005869798483558431\">{$$contentTexts[1].value}</a>{$$contentTexts[2].value}</li><li>{$$contentTexts[3].value}</li></ol></Container><div className=\"markdown\"><h2 id=\"relation\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#relation\"><span className=\"icon icon-link\" /></a>{\"Relation\"}</h2><p>{$$contentTexts[4].value}</p><ol><li>{$$contentTexts[5].value}</li><li>{$$contentTexts[6].value}</li></ol><p>{$$contentTexts[7].value}</p><h2 id=\"基础使用\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#基础使用\"><span className=\"icon icon-link\" /></a>{\"基础使用\"}</h2></div><DumiDemo {...{\n  \"demo\": {\n    \"id\": \"docs-component-relation-demo-demo1\"\n  },\n  \"previewerProps\": {\n    \"filename\": \"docs/component/demo/Relation/demo1.tsx\"\n  }\n}} /><div className=\"markdown\"><h2 id=\"表单校验\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#表单校验\"><span className=\"icon icon-link\" /></a>{\"表单校验\"}</h2></div><Container type=\"info\"><p>{$$contentTexts[8].value}</p><p>{$$contentTexts[9].value}<br />{$$contentTexts[10].value}</p></Container><DumiDemo {...{\n  \"demo\": {\n    \"id\": \"docs-component-relation-demo-demo2\"\n  },\n  \"previewerProps\": {\n    \"filename\": \"docs/component/demo/Relation/demo2.tsx\"\n  }\n}} /><div className=\"markdown\"><p><strong>{$$contentTexts[11].value}</strong></p><h2 id=\"api\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#api\"><span className=\"icon icon-link\" /></a>{\"API\"}</h2></div><API id=\"RelationComponent\" /><div className=\"markdown\"><p><strong>{$$contentTexts[12].value}</strong></p><h3 id=\"iconfig\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#iconfig\"><span className=\"icon icon-link\" /></a>{\"IConfig\"}</h3><SourceCode>{$$contentTexts[13].value}</SourceCode><h3 id=\"relation-1\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#relation-1\"><span className=\"icon icon-link\" /></a>{\"Relation\"}</h3><SourceCode>{$$contentTexts[14].value}</SourceCode><h3 id=\"item\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#item\"><span className=\"icon icon-link\" /></a>{\"Item\"}</h3><SourceCode>{$$contentTexts[15].value}</SourceCode><h2 id=\"参考链接\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#参考链接\"><span className=\"icon icon-link\" /></a>{\"参考链接\"}</h2><p>{$$contentTexts[16].value}<a href=\"https://juejin.cn/post/7005869798483558431\">{$$contentTexts[17].value}</a></p></div></>","meta":{"embeds":[],"frontmatter":{"title":"Relation","toc":"content","filename":"docs/component/Relation.md","order":1,"description":"在具体的业务中，我们可能会存在如下的场景："},"demos":[{"id":"docs-component-relation-demo-demo1","component":"React.lazy(() => import( /* webpackChunkName: \"demos\" */ '/Users/jxd/Desktop/前端项目/前端项目/react-window-table/docs/component/demo/Relation/demo1.tsx?techStack=react'))","asset":{"type":"BLOCK","id":"docs-component-relation-demo-demo1","refAtomIds":[],"dependencies":{"index.tsx":{"type":"FILE","value":"import { Button, Form } from 'antd';\nimport { RelationComponent } from 'oulae_dumi_component_web';\n\nconst KEY_MAP = [\n  {\n    label: '品牌',\n    value: 'brand',\n  },\n  {\n    label: '浏览器',\n    value: 'browser',\n  },\n  {\n    label: '操作系统',\n    value: 'system',\n  },\n  {\n    label: '软件',\n    value: 'software',\n  },\n];\n\nconst VALUE_MAP = {\n  brand: [\n    {\n      label: '阿里',\n      value: 'ali',\n    },\n    {\n      label: '百度',\n      value: 'baidu',\n    },\n    {\n      label: '腾讯',\n      value: 'tecent',\n    },\n  ],\n  browser: [\n    {\n      label: '谷歌',\n      value: 'chrome',\n    },\n    {\n      label: '火狐',\n      value: 'firefox',\n    },\n    {\n      label: 'Edge',\n      value: 'edge',\n    },\n  ],\n};\n\nconst HANDLE_MAP = [\n  {\n    label: '等于',\n    value: '==',\n  },\n  {\n    label: '不等于',\n    value: '!=',\n  },\n  {\n    label: '大于',\n    value: '>',\n  },\n  {\n    label: '大于等于',\n    value: '>=',\n  },\n  {\n    label: '小于',\n    value: '<',\n  },\n  {\n    label: '小于等于',\n    value: '<=',\n  },\n];\n\nconst obj = {\n  ops: 'and',\n  children: [\n    {\n      key: 'brand',\n      op: '!=',\n      value: 'ali',\n    },\n    {\n      key: 'system',\n      op: '==',\n      value: '31',\n    },\n    {\n      ops: 'and',\n      children: [\n        {\n          key: 'software',\n          op: '!=',\n          value: '31',\n        },\n        {\n          key: 'browser',\n          op: '<',\n          value: 'firefox',\n        },\n      ],\n    },\n  ],\n};\n\nconst Index = () => {\n  const onFinish = (e: any) => {\n    console.log(e);\n  };\n\n  return (\n    <div>\n      <Form\n        onFinish={onFinish}\n        initialValues={{\n          relation: obj,\n        }}\n      >\n        <Form.Item label=\"测试数据\" name={'relation'}>\n          <RelationComponent\n            keyMap={KEY_MAP}\n            handleMap={HANDLE_MAP}\n            valueMap={VALUE_MAP}\n          ></RelationComponent>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Index;\n"},"antd":{"type":"NPM","value":"5.3.3"}}},"sources":{"index.tsx":"/Users/jxd/Desktop/前端项目/前端项目/react-window-table/docs/component/demo/Relation/demo1.tsx"}},{"id":"docs-component-relation-demo-demo2","component":"React.lazy(() => import( /* webpackChunkName: \"demos\" */ '/Users/jxd/Desktop/前端项目/前端项目/react-window-table/docs/component/demo/Relation/demo2.tsx?techStack=react'))","asset":{"type":"BLOCK","id":"docs-component-relation-demo-demo2","refAtomIds":[],"dependencies":{"index.tsx":{"type":"FILE","value":"import { Button, Form } from 'antd';\nimport { RelationComponent } from 'oulae_dumi_component_web';\n\nconst KEY_MAP = [\n  {\n    label: '品牌',\n    value: 'brand',\n  },\n  {\n    label: '浏览器',\n    value: 'browser',\n  },\n  {\n    label: '操作系统',\n    value: 'system',\n  },\n  {\n    label: '软件',\n    value: 'software',\n  },\n];\n\nconst VALUE_MAP = {\n  brand: [\n    {\n      label: '阿里',\n      value: 'ali',\n    },\n    {\n      label: '百度',\n      value: 'baidu',\n    },\n    {\n      label: '腾讯',\n      value: 'tecent',\n    },\n  ],\n  browser: [\n    {\n      label: '谷歌',\n      value: 'chrome',\n    },\n    {\n      label: '火狐',\n      value: 'firefox',\n    },\n    {\n      label: 'Edge',\n      value: 'edge',\n    },\n  ],\n};\n\nconst HANDLE_MAP = [\n  {\n    label: '等于',\n    value: '==',\n  },\n  {\n    label: '不等于',\n    value: '!=',\n  },\n  {\n    label: '大于',\n    value: '>',\n  },\n  {\n    label: '大于等于',\n    value: '>=',\n  },\n  {\n    label: '小于',\n    value: '<',\n  },\n  {\n    label: '小于等于',\n    value: '<=',\n  },\n];\n\nconst obj = {\n  ops: 'and',\n  children: [\n    {\n      key: 'brand',\n      op: '!=',\n      value: 'ali',\n    },\n    {\n      key: 'system',\n      op: '==',\n      value: '31',\n    },\n    {\n      ops: 'and',\n      children: [\n        {\n          key: 'software',\n          op: '!=',\n          value: '31',\n        },\n        {\n          key: 'browser',\n          op: '<',\n          value: 'firefox',\n        },\n      ],\n    },\n  ],\n};\n\nconst Index = () => {\n  const onFinish = (e: any) => {\n    console.log(e);\n  };\n\n  return (\n    <div>\n      <Form\n        onFinish={onFinish}\n        initialValues={\n          {\n            // relation: obj,\n          }\n        }\n      >\n        <Form.Item label=\"测试数据\" name={'relation'}>\n          <RelationComponent\n            keyMap={KEY_MAP}\n            handleMap={HANDLE_MAP}\n            valueMap={VALUE_MAP}\n          ></RelationComponent>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Index;\n"},"antd":{"type":"NPM","value":"5.3.3"}}},"sources":{"index.tsx":"/Users/jxd/Desktop/前端项目/前端项目/react-window-table/docs/component/demo/Relation/demo2.tsx"}}],"toc":[{"id":"relation","depth":2,"title":"Relation"},{"id":"基础使用","depth":2,"title":"基础使用"},{"id":"表单校验","depth":2,"title":"表单校验"},{"id":"api","depth":2,"title":"API"},{"id":"iconfig","depth":3,"title":"IConfig"},{"id":"relation-1","depth":3,"title":"Relation"},{"id":"item","depth":3,"title":"Item"},{"id":"参考链接","depth":2,"title":"参考链接"}],"texts":[{"value":"组件的基础实现来自于：","paraId":0},{"value":"手把手教你写一个条件组合组件","paraId":0},{"value":"，如果要了解原理建议先阅读这篇文章","paraId":0},{"value":"该组件依赖于：\"antd\": \"^5.3.2\"，如果是其他 UI 框架的话，需要自行进行修改","paraId":0},{"value":"在具体的业务中，我们可能会存在如下的场景：","paraId":1,"tocIndex":0},{"value":"某些字段需要相关同学去配置条件关系","paraId":2,"tocIndex":0},{"value":"这些条件关系存在着多层级的组合","paraId":2,"tocIndex":0},{"value":"而 Relation 组件就是一个解决条件组合的组件","paraId":3,"tocIndex":0},{"value":"Q: 表单校验为什么需要在 Form 中额外维护一个 relations_validate 对象呢？直接使用 Relation value 值不行吗？","paraId":4},{"value":"A: 因为 Relation Value 值是一个对象，同时它的层级也是不可控的；这里为了降低复杂度，因此直接重新定义了一个 relations_validate 对象值","paraId":5},{"value":"\n同时，组件值的状态同步其实也是组件内部主动调用 onChange 实现的！","paraId":5},{"value":"为了做表单校验，我们在 Form 对象中整体维护了一个 relations_validate 对象(在 Form 组件的 onFinish callback 中可以看到)，在表单提交的时候注意过滤一下","paraId":6},{"value":"这一步建议直接看代码中 ts 定义文件","paraId":7},{"value":"interface IConfigMap {\n  label: string;\n  value: IValueType;\n}\n","paraId":8,"tocIndex":4},{"value":"interface Relation {\n  ops: EnumLogics;\n  children: Array<(Item & Relation) | {}>;\n}\n","paraId":9,"tocIndex":5},{"value":"interface Item {\n  key?: any;\n  op?: any;\n  value?: any;\n  [key: string]: any;\n}\n","paraId":10,"tocIndex":6},{"value":"1， ","paraId":11,"tocIndex":7},{"value":"手把手教你写一个条件组合组件","paraId":11,"tocIndex":7}]}},"type":"Object"}