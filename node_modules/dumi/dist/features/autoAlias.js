var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/features/autoAlias.ts
var autoAlias_exports = {};
__export(autoAlias_exports, {
  default: () => autoAlias_default
});
module.exports = __toCommonJS(autoAlias_exports);
var import_utils = require("../utils");
var import_fs = __toESM(require("fs"));
var import_path = __toESM(require("path"));
var autoAlias_default = (api) => {
  let entryDir;
  api.describe({
    key: "autoAlias",
    config: {
      schema: (Joi) => Joi.bool()
    },
    enableBy: () => !!api.pkg.name
  });
  api.modifyAppData(async (memo) => {
    var _a;
    if ((_a = api.config.resolve) == null ? void 0 : _a.entryFile) {
      entryDir = import_path.default.resolve(api.cwd, api.config.resolve.entryFile);
    } else if (import_fs.default.existsSync(import_path.default.join(api.cwd, "src"))) {
      entryDir = import_path.default.join(api.cwd, "src");
    }
    memo.fatherConfigs = await (0, import_utils.tryFatherBuildConfigs)(api.cwd);
    return memo;
  });
  api.chainWebpack((memo) => {
    const fatherConfigs = api.appData.fatherConfigs;
    fatherConfigs.sort((a, b) => {
      var _a, _b;
      const aLevel = (((_a = a.output) == null ? void 0 : _a.path) || a.output).split("/").length;
      const bLevel = (((_b = b.output) == null ? void 0 : _b.path) || b.output).split("/").length;
      return bLevel - aLevel;
    });
    fatherConfigs.forEach((item) => {
      var _a;
      const key = `${api.pkg.name}/${((_a = item.output) == null ? void 0 : _a.path) || item.output}`;
      if (!memo.resolve.alias.has(key)) {
        memo.resolve.alias.set(key, import_path.default.join(api.cwd, item.entry || item.input));
      }
    });
    if (entryDir && !memo.resolve.alias.has(api.pkg.name)) {
      memo.resolve.alias.set(api.pkg.name, entryDir);
    }
    return memo;
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
