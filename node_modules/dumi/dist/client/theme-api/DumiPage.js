function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import { useRouteMeta, useSiteData } from 'dumi';
import ContentTabs from 'dumi/theme/slots/ContentTabs';
import React, { useEffect, useState } from 'react';
import { useTabQueryState } from "./useTabMeta";
export var DumiPage = function DumiPage(props) {
  var _useRouteMeta = useRouteMeta(),
      tabs = _useRouteMeta.tabs;

  var _useTabQueryState = useTabQueryState(),
      _useTabQueryState2 = _slicedToArray(_useTabQueryState, 2),
      tabKey = _useTabQueryState2[0],
      setTabKey = _useTabQueryState2[1];

  var _useState = useState(function () {
    return tabs === null || tabs === void 0 ? void 0 : tabs.find(function (_ref) {
      var key = _ref.key;
      return key === tabKey;
    });
  }),
      _useState2 = _slicedToArray(_useState, 2),
      tab = _useState2[0],
      setTab = _useState2[1];

  var _useSiteData = useSiteData(),
      setLoading = _useSiteData.setLoading; // update loading status when page loaded


  useEffect(function () {
    setLoading(false);
  }, []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContentTabs, {
    tabs: tabs,
    tabKey: tabKey,
    onChange: function onChange(val) {
      setTab(val);
      setTabKey(val === null || val === void 0 ? void 0 : val.key);
    }
  }), tab ? /*#__PURE__*/React.createElement(tab.components.default) : props.children);
};